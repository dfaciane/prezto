#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

alias e='emacsclient -q -a emacs'
EDITOR=emacsclient
export ALTERNATE_EDITOR=

#function e {
#    tmux new-window -a -n "emacs" "$EDITOR $@"
#}

#function ee {
#    tmux split-window "$EDITOR $@"
#}


export GIT_EDITOR=$EDITOR
export VISUAL=$EDITOR
alias ec=$EDITOR

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -T LD_LIBRARY_PATH ld_library_path :
typeset -gU cdpath fpath mailpath manpath infopath path ld_library_path

# Set the list of directories that cd searches.
cdpath=(
     $cdpath
)

# Set the list of directories that Zsh searches for programs.
path=(
  $HOME/bin
  /usr/local/{bin,sbin}
  $path
)

# Function path
fpath=(
  $HOME/bin
  /usr/local/bin
  $fpath
)

# Man path
manpath=(
  $HOME/man
  /usr/local/man
  $manpath
)

# Info path
infopath=(
  $HOME/share/info
  /usr/local/share/info
  /usr/share/info
  $infopath
)

#
# persistent ssh session with tmux
#
function rtmux {
  case "$2" in
    "") autossh -M 0 $1 -t "zsh -c 'if tmux -qu has; then tmux -qu attach; else EDITOR=vim tmux -qu new; fi'";;
    *) autossh -M 0 $1 -t "zsh -c 'if tmux -qu has -t $2; then tmux -qu attach -t $2; else EDITOR=vim tmux -qu new -s $2; fi'";;
  esac
}

# split window in two and run command
function tmw {
    tmux split-window -dh "$*"
}

#
# tmuxinator
#
if [ -f $HOME/.bin/tmuxinator.zsh ] ; then
   source $HOME/.bin/tmuxinator.zsh
fi

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
#export LESS='-F -g -i -M -R -S -w -X -z-4'
#export LSCOLORS="exfxcxdxbxegedabagacad"

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
#if (( $#commands[(i)lesspipe(|.sh)] )); then
#  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
#fi

export PAGER='less'
alias more=less

#
# Grep
#
alias grep=egrep

#
# Perlbrew
#
if [ -d $HOME/perl5/perlbrew ]
then
    source $HOME/perl5/perlbrew/etc/bashrc
fi

#
# Linuxbrew
#
LINUXBREW_HOME_ALT=/home/linuxbrew/.linuxbrew
LINUXBREW_HOME=/home/.linuxbrew
if [ -d $LINUXBREW_HOME ]
then
    path=($LINUXBREW_HOME/bin $path)
    manpath=($LINUXBREW_HOME/share/man $manpath)
    infopath=($LINUXBREW_HOME/share/info $infopath)
elif [ -d $LINUXBREW_HOME_ALT ]
then
    LINUXBREW_HOME=$LINUXBREW_HOME_ALT
    path=($LINUXBREW_HOME/bin $path)
    manpath=($LINUXBREW_HOME/share/man $manpath)
    infopath=($LINUXBREW_HOME/share/info $infopath)
fi

#
# setopts
#
# why would you type 'cd dir' if you could just type 'dir'?
setopt AUTO_CD

# Now we can pipe to multiple outputs!
setopt MULTIOS

# This makes cd=pushd
setopt AUTO_PUSHD

# This will use named dirs when possible
setopt AUTO_NAME_DIRS

# If we have a glob this will expand it
setopt GLOB_COMPLETE
setopt PUSHD_MINUS

# No more annoying pushd messages...
setopt PUSHD_SILENT

# blank pushd goes to home
setopt PUSHD_TO_HOME

# this will ignore multiple directories for the stack.  Useful?  I dunno.
setopt PUSHD_IGNORE_DUPS

# 10 second wait if you do something that will delete everything.  I wish I'd had this before...
setopt RM_STAR_WAIT

# use magic (this is default, but it can't hurt!)
#setopt ZLE

setopt NO_HUP

# setopt IGNORE_EOF

# If I could disable Ctrl-s completely I would!
setopt NO_FLOW_CONTROL

# Keep echo "station" > station from clobbering station
setopt NO_CLOBBER

# Case insensitive globbing
setopt NO_CASE_GLOB

# Be Reasonable!
setopt NUMERIC_GLOB_SORT

# I don't know why I never set this before.
setopt EXTENDED_GLOB

# hows about arrays be awesome?
# (that is, frew${cool}frew has frew surrounding all the variables, not just first and last
setopt RC_EXPAND_PARAM

# Who doesn't want home and end to work?
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line

# Incremental search is elite!
#bindkey -M vicmd "/" history-incremental-search-backward
#bindkey -M vicmd "?" history-incremental-search-forward

# Search based on what you typed in already
#bindkey -M vicmd "//" history-beginning-search-backward
#bindkey -M vicmd "??" history-beginning-search-forward

#bindkey "\eOP" run-help

# oh wow!  This is killer...  try it!
#bindkey -M vicmd "q" push-line

# it's like, space AND completion.  Gnarlbot.
#bindkey -M viins ' ' magic-space

alias ls="ls -F"

#[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

export PATH="/home/dfaciane/.linuxbrew/bin:$PATH"
